name: Publish
on:
  workflow_run:
    workflows: ['CI']
    types:
      - completed
  push:
    branches:
      - 'main'

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Retrieve package.json version
        id: get_version
        run: echo "version=$(node -e \"console.log(require('./package.json').version)\")" >> $GITHUB_ENV

      - name: Update simple-fm version
        run: |
          sed -i "s/const PACKAGE_VERSION = '[0-9.]*'/const PACKAGE_VERSION = '${{ env.version }}'/" src/constants.ts

      - name: Commit version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add src/constants.ts
          git commit -m "chore: update version to ${{ env.version }}"
          git push

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@v1
        with:
          publish: pnpm ci:publish
          version: pnpm ci:version
          commit: 'chore(changesets): release'
          title: 'chore(changesets): release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
